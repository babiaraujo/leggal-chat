services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: leggal_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: leggal_db
      POSTGRES_USER: leggal_user
      POSTGRES_PASSWORD: leggal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leggal_user -d leggal_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - leggal_network

  # Redis para cache e tarefas ass√≠ncronas
  redis:
    image: redis:7-alpine
    container_name: leggal_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - leggal_network

  # Backend Python/FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: leggal_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://leggal_user:leggal_password@postgres:5432/leggal_db
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-make-it-long-and-random-at-least-32-characters}
      - ENVIRONMENT=development
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      - leggal_network

networks:
  leggal_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
